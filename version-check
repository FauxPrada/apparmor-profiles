#!/bin/bash
#
# Description: Checks installed versions of programs for which there is
#              an apparmor profile for.
#
# Homepage: https://git.sr.ht/~krathalan/apparmor-profiles
#
# Copyright (C) 2019 krathalan
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# -----------------------------------------
# -------------- Guidelines ---------------
# -----------------------------------------

# This script follows the Google Shell Style Guide: 
# https://google.github.io/styleguide/shell.xml

# This script uses shellcheck: https://www.shellcheck.net/

# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail

# -----------------------------------------
# ----------- Program variables -----------
# -----------------------------------------

# Colors
readonly GREEN=$(tput setaf 10)
readonly RED=$(tput bold && tput setaf 1)
readonly NC=$(tput sgr0) # No color/turn off all tput attributes

# Location of this script (where is the apparmor-profiles repo?)
readonly DIR="$1"

# -----------------------------------------
# ---------------- Script -----------------
# -----------------------------------------

# Print intro
if [ "$(whoami)" = "root" ]; then
  printf "%sThis script should NOT be run as root (or sudo)!%s\n" "${RED}" "${NC}" >&2
  exit 2
fi

for profile in "${DIR}"/profiles/*; do
  if [[ "${profile}" == *"template" ]]; then
    continue
  fi

  profiledVersion="$(grep Version "${profile}" 2> /dev/null | grep -v deny | awk '{print $NF}' || printf "(Problem printing info)")"

  # Fix some profile names being different than their package name
  # Remove "profiles/" prefix
  package="${profile##*/}"

  case "${package}" in
    bluetoothd)
      package="bluez"
      ;;
    gpg-agent)
      package="gnupg"
      ;;
    NetworkManager)
      package="networkmanager"
      ;;
    rngd)
      package="rng-tools"
      ;;
    ssh|ssh-agent)
      package="openssh"
      ;;
  esac

  installedVersion="$(pacman -Qi "${package}" 2> /dev/null | grep Version | awk '{printf $3}' || printf "not")"

  # Remove package release suffix from installed version
  installedVersion="${installedVersion%%-*}"
  installedVersion="${installedVersion%%p*}"
  installedVersion="${installedVersion%%+*}"

  if [[ "${installedVersion}" == "not" ]]; then
    printf "%s %s installed\n" "${package}" "${installedVersion}"
  elif [[ ! "${installedVersion}" == "${profiledVersion}" ]]; then
    printf "%s%s %s installed; %s profiled%s\n" "${RED}" "${package}" "${installedVersion}" "${profiledVersion}" "${NC}" >&2
  else
    printf "%s%s profile up to date%s\n" "${GREEN}" "${package}" "${NC}"
  fi
done
