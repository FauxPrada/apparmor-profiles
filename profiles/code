# AppArmor profile for VSCodium and VS Code editor
# Version of VSCode/ium profiled: 1.44.0
# Homepage: https://git.sr.ht/~krathalan/apparmor-profiles/
# Copyright 2019 (C) krathalan; Licensed under GPLv3

#include <tunables/global>

profile code /usr/{bin,lib/code,share/vscodium-bin,share/vscodium-bin/bin}/{code,code-oss,code.js,codium} {
  #include <abstractions/base>
  #include <abstractions/fonts>
  #include <abstractions/krathalans-common-gui>
  #include <abstractions/krathalans-hardening>
  #include <abstractions/krathalans-hwaccel>

  # Nvidia users
  #include <local/code>

  # Helper programs
  #include <abstractions/bash>
  /usr/bin/{bash,dash,dirname,git,grep,readlink,which} rix,

  # Needed to browse and download extensions
  #include <abstractions/krathalans-networking>
  #include <abstractions/user-tmp>

  # Needed to function at all
  /dev/shm/.org.chromium.Chromium.* rw,
  @{PROC}/ r,
  owner @{PROC}/*/fd/ r,
  owner @{PROC}/*/comm w,
  owner /run/user/*/vscode*.sock w,

  # Needed to render
  @{sys}/bus/pci/devices/ r,
  @{sys}/devices/pci[0-9]*/** r,

  # Chromium/Electron spawns and uses multiple processes
  @{system_share_dirs}/vscodium-bin/{,**} mr,
  /usr/lib/code/{,**} mr,
  /usr/lib/electron[6-9]/electron rix,
  /usr/{bin,lib/code,share/vscodium-bin,share/vscodium-bin/bin}/{code,code-oss,code.js,codium} rpx,

  # Intel audio (won't open without this)
  /opt/intel/mediasdk/lib/libmfx.so.* mr,

  # Intel (other)
  /proc/sys/dev/i915/perf_stream_paranoid r,

  # Needed to record open documents at shutdown and open them again at startup
  owner  @{user_share_dirs}/recently-used.xbel* rw,

  # Config
  owner "@{HOME}/.config/Code - OSS/{,**}" k,
  owner @{HOME}/.config/VSCodium/{,**} k,
  owner @{HOME}/.vscode-oss/{,**} rw,

  # Needed to edit documents (including config files)
  # This doesn't give permission for the whole home dir (and all subdirs), just
  # the base home dir where stuff like ~/.gitconfig sits
  owner @{HOME}/{,*} rw,
  owner @{HOME}/.config/{,**} rw,
  owner @{HOME}/{D,d}ocuments/{,**} rw,
  owner @{HOME}/{G,g}it/{,**} rw,

  # Protect sensitive file(s)
  deny @{HOME}/.bash_history rw,

  # File picker
  @{system_share_dirs}/glib-[0-9]*/schemas/gschemas.compiled r,

  # Needed to open links in Firefox
  /usr/bin/xdg-open rCx,

  profile xdg-open /usr/bin/xdg-open {
    #include <abstractions/base>
    #include <abstractions/krathalans-hardening>

    # Helper programs
    /usr/bin/{cut,bash,dash,dbus-send,egrep,grep,head,sed,which,xdg-mime} rix,
    /usr/bin/xdg-open r,

    # Browsers -- only allow Firefox
    /{opt/firefox-nightly,usr/bin,usr/lib/firefox*}/firefox* rPx,
    deny /usr/bin/lynx rx,

    # Config
    @{system_share_dirs}/applications/{,**} r,
    @{user_share_dirs}/applications/{,**} r,

    # Silence unnecessary permissions
    deny /usr/bin/{gawk,uname,xprop} rx,
  }

  # Needed for C/C++ Clang Command Adapter extension
  # https://marketplace.visualstudio.com/items?itemName=mitaki28.vscode-clang
  # Extension is MIT Licensed: https://github.com/mitaki28/vscode-clang
  signal send set=term peer=code//clang,
  signal send set=term peer=codium//clang,
  /usr/bin/clang-[0-9] rCx,

  profile clang /usr/bin/clang-[0-9] {
    #include <abstractions/base>
    #include <abstractions/fonts>
    #include <abstractions/krathalans-hardening>

    signal receive set=term peer=code,
    signal receive set=term peer=codium,
    /usr/bin/clang-[0-9] rix,

    # This is where all header files are
    /usr/include/{,**} r,

    # Clang needs access to the same directories as VSCodium to analyze and compile
    # But we probably don't need the base home dir and ~/.config directories :)
    @{system_share_dirs}/vscodium-bin/{,**} r,
    owner @{HOME}/{D,d}ocuments/{,**} rw,
    owner @{HOME}/{G,g}it/{,**} rw,

    # Deny unnecessary permissions
    deny /dev/shm/.org.chromium.Chromium.* rw,
  }

  # Needed for shellcheck extension
  # https://marketplace.visualstudio.com/items?itemName=timonwong.shellcheck
  # Extension is MIT Licensed: https://github.com/timonwong/vscode-shellcheck
  /usr/bin/shellcheck rix,

  # Possibly needed for debugging? Use separate debugger program (e.g. gdb)
  deny @{PROC}/sys/kernel/yama/ptrace_scope r,

  # An editor doesn't need audio
  deny /usr/bin/pulseaudio rx,
  deny /etc/pulse/client.conf r,
  deny /run/user/*/pulse/ rw,

  # GVFS isn't necessary
  deny /usr/share/gvfs/remote-volume-monitors/ r,

  # Dconf -- disabling this doesn't affect VSCodium
  deny owner @{HOME}/.config/dconf/user r,
  deny owner /run/user/*/dconf/user rw,

  # Use a separate terminal program
  deny /dev/ptmx rw,
  deny /dev/pts/[0-9] rw,
  deny /dev/tty rw,
  deny /dev/tty[0-9] rw,
  deny /sys/devices/virtual/tty/** r,

  # Silence unnecessary permissions
  deny signal send set=term peer=unconfined,
  deny /usr/bin/{date,env,id,ip,tput,tty} rx,
  deny /dev/shm/ r,
  deny @{PROC}/version r,
  deny @{PROC}/vmstat r,
  deny @{PROC}/*/comm r,
  deny @{PROC}/*/mountinfo r,
  deny @{PROC}/*/oom_score_adj w,
  deny @{PROC}/*/stat r,
  deny @{PROC}/*/statm r,
  deny @{PROC}/*/task/ r,
  deny @{PROC}/sys/fs/inotify/max_user_watches r,
  deny @{sys}/devices/system/cpu/cpufreq/policy0/cpuinfo_max_freq r,
  deny @{system_share_dirs}/bash-completion/bash_completion r,
  deny /{,var/}run/systemd/userdb/ r,
  deny @{HOME}/.cache/{,**} r,
  deny @{HOME}/.pki/{,**} rw,
}
