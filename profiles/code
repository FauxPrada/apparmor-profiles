# AppArmor profile for VSCodium and VS Code editor
# Version of VSCode/ium profiled: 1.52.1
# Homepage: https://github.com/krathalan/apparmor-profiles
# Copyright 2019-2021-2020 (C) krathalan; Licensed under GPLv3

abi <abi/3.0>,
include <tunables/global>

profile code /usr/{bin,lib/code,share/vscodium-bin,share/vscodium-bin/bin}/{code,code-oss,code.js,codium} {
  include <abstractions/base>
  include <abstractions/fonts>
  include <abstractions/krathalans-common-gui>

  # Helper programs
  include <abstractions/bash>
  /usr/bin/{bash,dash,dirname,git,grep,readlink,rg,which} rix,

  # Needed to function at all
  owner /dev/shm/.org.chromium.Chromium.* rw,
  @{PROC}/ r,
  owner @{PROC}/*/fd/ r,
  owner @{PROC}/*/comm w,
  owner /run/user/*/vscode*.sock w,

  # Chromium/Electron spawns and uses multiple processes
  @{system_share_dirs}/vscodium-bin/{,**} mr,
  /usr/lib/code/{,**} mr,
  /usr/lib/electron*/electron rix,
  /usr/{bin,lib/code,share/vscodium-bin,share/vscodium-bin/bin}/{code,code-oss,code.js,codium} rpx,

  # Hwaccel
  include <abstractions/krathalans-hwaccel>
  @{sys}/bus/pci/devices/ r,
  @{sys}/devices/pci[0-9]*/** r,
  # Nvidia users
  include if exists <local/code>

  # Needed to browse and download extensions
  include <abstractions/krathalans-networking>
  include <abstractions/user-tmp>
  network unix seqpacket,
  network netlink raw,
  network inet dgram,
  network inet stream,
  network inet6 dgram,
  network inet6 stream,

  # Intel audio (won't open without this)
  /opt/intel/mediasdk/lib/libmfx.so.* mr,

  # Intel (other)
  @{PROC}/sys/dev/i915/perf_stream_paranoid r,

  # Needed to record open documents at shutdown and open them again at startup
  owner @{user_share_dirs}/recently-used.xbel* rw,

  # Config
  owner "@{HOME}/.config/Code - OSS/{,**}" rwk,
  owner @{HOME}/.config/{code-oss,Electron,VSCodium}/{,**} rwk,
  owner @{HOME}/.vscode-oss/{,**} rw,

  # Needed to edit common documents
  owner @{HOME}/{D,d}ocuments/{,**} rw,
  owner @{HOME}/{G,g}it/{,**} rw,

  # File picker
  @{system_share_dirs}/glib-[0-9]*/schemas/gschemas.compiled r,

  # Needed to open links in Firefox
  /usr/bin/xdg-open rCx,

  profile xdg-open /usr/bin/xdg-open {
    include <abstractions/base>

    # Helper programs
    /usr/bin/{cut,bash,dash,dbus-send,egrep,grep,head,sed,which,xdg-mime} rix,
    /usr/bin/xdg-open r,

    # Browsers -- only allow Firefox
    /{usr/bin,usr/lib/firefox*}/firefox* rPx,
    deny /usr/bin/lynx rx,

    # Config
    @{system_share_dirs}/applications/{,**} r,
    @{user_share_dirs}/applications/{,**} r,

    # Silence unnecessary permissions
    deny /usr/bin/{gawk,uname,xprop} rx,
  }

  # Needed for Rust extension
  # https://marketplace.visualstudio.com/items?itemName=rust-lang.rust
  # Extension is dual-licensed under Apache 2.0 and MIT terms:
  #    https://github.com/rust-lang/vscode-rust/blob/master/COPYRIGHT
  /usr/bin/rustc rUx,
  /usr/bin/rls rUx,

  # Needed for C/C++ Clang Command Adapter extension
  # https://marketplace.visualstudio.com/items?itemName=mitaki28.vscode-clang
  # Extension is MIT Licensed: https://github.com/mitaki28/vscode-clang
  signal send set=term peer=code//clang,
  signal send set=term peer=codium//clang,
  /usr/bin/clang* rCx,

  profile clang /usr/bin/clang-[0-9] {
    include <abstractions/base>
    include <abstractions/fonts>

    signal receive set=term peer=code,
    signal receive set=term peer=codium,
    /usr/bin/clang-[0-9] rix,

    # This is where all header files are
    /usr/include/{,**} r,

    # Clang needs access to the same directories as VSCodium to analyze and compile
    @{system_share_dirs}/vscodium-bin/{,**} r,
    owner @{HOME}/{D,d}ocuments/{,**} rw,
    owner @{HOME}/{G,g}it/{,**} rw,

    # Deny unnecessary permissions
    deny /dev/shm/.org.chromium.Chromium.* rw,
  }

  # Needed for shellcheck extension
  # https://marketplace.visualstudio.com/items?itemName=timonwong.shellcheck
  # Extension is MIT Licensed: https://github.com/timonwong/vscode-shellcheck
  /usr/bin/shellcheck rix,

  # Possibly needed for debugging? Use separate debugger program (e.g. gdb)
  deny @{PROC}/sys/kernel/yama/ptrace_scope r,

  # An editor doesn't need audio
  deny /usr/bin/pulseaudio rx,
  deny /etc/pulse/client.conf r,
  deny /run/user/*/pulse/ rw,

  # GVFS isn't necessary
  deny /usr/share/gvfs/remote-volume-monitors/ r,

  # Dconf -- disabling this doesn't affect VSCodium
  deny @{HOME}/.config/dconf/user r,
  deny /run/user/*/dconf/user rw,

  # Use a separate terminal program
  deny /dev/ptmx rw,
  deny /dev/pts/[0-9] rw,
  deny /dev/tty rw,
  deny /dev/tty[0-9] rw,
  deny /sys/devices/virtual/tty/** r,

  # Silence unnecessary permissions
  deny signal send set=term peer=unconfined,
  deny /usr/bin/{date,env,id,ip,tput,tty} rx,
  deny /dev/shm/ r,
  deny @{user_share_dirs}/{,**} rw,
  deny @{PROC}/{version,vmstat} r,
  deny @{PROC}/*/{comm,cmdline,mountinfo,oom_score_adj,stat,statm} r,
  deny @{PROC}/*/task/{,**} rw,
  deny @{PROC}/*/oom_score_adj w,
  deny @{PROC}/sys/fs/inotify/max_user_watches r,
  deny @{sys}/devices/system/cpu/cpufreq/policy0/cpuinfo_max_freq r,
  deny @{system_share_dirs}/bash-completion/bash_completion r,
  deny /{,var/}run/systemd/userdb/ r,
  deny @{HOME}/.cache/{,**} r,
  deny @{HOME}/.pki/{,**} rw,
}
